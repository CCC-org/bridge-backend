plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.epages.restdocs-api-spec' version '0.16.2'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'ccc'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	ext {
		springCloudVersion = "2021.0.1"
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

}

project(':keewe-batch') {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-batch'
		implementation 'org.springframework.boot:spring-boot-starter-quartz'
	}
}

project(':keewe-push') {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
	}
}


project(':keewe-statistics') {
	dependencies {
		implementation project(path: ':keewe-domain', configuration: 'default')
		implementation 'org.springframework.boot:spring-boot-starter-web'
	}
}

project(':keewe-infra') {
	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}

	dependencies {
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
		// todo :: amqp import, aws config
	}
}

project(':keewe-core') {
	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
	}
}


project(':keewe-domain') {
	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}

	dependencies {
		implementation project(path: ':keewe-core', configuration: 'default')
		implementation project(path: ':keewe-infra', configuration: 'default')
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'mysql:mysql-connector-java'
		implementation group: 'com.h2database', name: 'h2', version: '2.1.214'
		// todo ::jpa, redis import
	}
}


project(':keewe-api') {
	apply plugin: 'com.epages.restdocs-api-spec'

	dependencies {
		implementation project(path: ':keewe-core', configuration: 'default')
		implementation project(path: ':keewe-domain', configuration: 'default')
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
		implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

		testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
		testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'
		testImplementation 'org.springframework.security:spring-security-test'
	}

	task copyDocument(type:Copy) {
		dependsOn('openapi3')
		from "build/api-spec"
		into "src/main/resources/static/docs/"
	}

	bootJar {
		dependsOn copyDocument
		from ("build/api-spec") {
			into 'static/docs'
		}
	}

	test.doFirst {
		delete file('build/generated-snippets')
	}

	openapi3 {
		ext {
			local = 'http://localhost:8080'
			dev = 'https://api-keewe.com'
		}

		def active = System.properties.getOrDefault('spring.profiles.active', 'local')

		server = ext.get(active)
		title = 'Keewe-API'
		description = 'Keewe의 API 문서입니다.'
		format = 'yaml'
	}
}