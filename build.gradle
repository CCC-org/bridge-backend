plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.epages.restdocs-api-spec' version '0.16.2'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'ccc'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'

		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.mockito:mockito-inline:4.6.1'
	}

	ext {
		springCloudVersion = "2021.0.1"
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

}

project(':keewe-batch') {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-batch'
		implementation 'org.springframework.boot:spring-boot-starter-quartz'
	}
}

project(':keewe-push') {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
	}
}


project(':keewe-statistics') {
	dependencies {
		implementation project(path: ':keewe-domain', configuration: 'default')
		implementation 'org.springframework.boot:spring-boot-starter-web'
	}
}

project(':keewe-infra') {
	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}

	dependencies {
		implementation project(path: ':keewe-core', configuration: 'default')
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
		// todo :: amqp import, aws config
	}
}

project(':keewe-core') {
	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		implementation 'org.springframework.boot:spring-boot-starter-aop'
		annotationProcessor 'org.projectlombok:lombok'
	}
}


project(':keewe-domain') {
	apply plugin: 'com.ewerk.gradle.plugins.querydsl'

	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}

	configurations {
		querydsl {
			extendsFrom compileClasspath
		}
	}

	ext {
		queryDslVersion = "5.0.0"
	}

	dependencies {
		implementation project(path: ':keewe-core', configuration: 'default')
		implementation project(path: ':keewe-infra', configuration: 'default')
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'mysql:mysql-connector-java'
		implementation group: 'com.h2database', name: 'h2', version: '2.1.214'
		implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
		implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
		implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
		// todo ::jpa, redis import
	}


	def querydslSrcDir = "$buildDir/generated/querydsl"

	querydsl {
		jpa = true
		querydslSourcesDir = querydslSrcDir
	}

	sourceSets {
		main.java.srcDir querydslSrcDir
	}

	compileQuerydsl {
		options.annotationProcessorPath = configurations.querydsl
	}
}

project(':keewe-api') {
	apply plugin: 'com.epages.restdocs-api-spec'


	ext {
		logbackVersion = "1.2.11"
		sentryVersion = "5.7.4"
	}

	dependencies {
		implementation project(path: ':keewe-core', configuration: 'default')
		implementation project(path: ':keewe-domain', configuration: 'default')
		implementation "io.sentry:sentry-spring-boot-starter:${sentryVersion}"
		implementation "io.sentry:sentry-logback:${sentryVersion}"
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
		implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
		testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'
		testImplementation 'org.springframework.security:spring-security-test'
	}


	def active = System.properties.getOrDefault('spring.profiles.active', 'local')

	task copyDocument(type:Copy) {
		from "build/api-spec"
		into "src/main/resources/static/docs/"
	}

	def makeApiDocs = tasks.register('makeApiDocs')
	makeApiDocs.configure {
		finalizedBy('openapi3').finalizedBy(copyDocument)
	}

	bootJar {
		if(active == 'local') {
			finalizedBy(makeApiDocs) // for local
		}
	}

	test {
		doFirst {
			delete file('build/generated-snippets')
			delete file('build/api-spec')
		}
		finalizedBy(makeApiDocs)
	}

	openapi3 {
		ext {
			local = 'http://localhost:8080'
			dev = 'https://api-keewe.com'
		}
		server = ext.get(active)
		title = 'Keewe-API'
		description = 'Keewe의 API 문서입니다.'
		format = 'yaml'
	}



}
